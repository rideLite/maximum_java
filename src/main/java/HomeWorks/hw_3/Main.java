package HomeWorks.hw_3;

import java.util.Arrays;
import java.util.Random;

/**
 * Массивы, методы
 * <p>
 * 1) Для выполнения каждого задания (task) используйте отдельные методы в классе Main,
 * которые будут вызываться из метода main
 * (не забываем про разницу между классом Main и методом main)
 * таким образом (скопируйте код в свой класс и изменяйте под свои задачи):
 * <p>
 * public class Main {
 * public static void main(String[] args) {
 * task1();
 * task2();
 * }
 * <p>
 * public static void task1 () {
 * System.out.println("Задача 1");
 * ... // Пишем код для задачи 1
 * }
 * <p>
 * public static int task2 () {
 * System.out.println("Задача 2");
 * ... // Пишем код для задачи 2
 * }
 * }
 * <p>
 * ВНИМАНИЕ!!! После вставки этого кода для его правильного форматирования нажмите сочетание клавиш Ctrl+Alt+L
 */

public class Main {
    public static void main(String[] args) {
        task1();
        task2();
        task3();

        String[] stringArray = {"AA", "BB", "CC"};
        System.out.println(task4(stringArray));
    }

    /**
     * task1) объявить пустой массив типа int[] с заданным размером,
     * в цикле заполнить его случайными значениями (с помощью Random),
     * далее вывести весь массив в консоль с помощью Arrays.toString()
     */
    public static void task1() {
        System.out.println("Задача 1");
        int[] arr1 = new int[8];
        for (int i = 0; i < arr1.length; i++) {
            Random random = new Random();
            arr1[i] = random.nextInt();
        }
        System.out.println(Arrays.toString(arr1));
    }

    /**
     * task2) объявить массив со значениями от 1 до 10, вывести нечетные значения (остаток от деления на 2 НЕ равен нулю) в консоль
     */
    public static void task2() {
        System.out.println("Задача 2");
        int[] arr2 = new int[10];
        for (int i = 0; i < 10; i++) {
            arr2[i] = i + 1;
            if (arr2[i] % 2 != 0) {
                System.out.println(arr2[i]);

            }
        }
    }

    /**
     * task3) объявить массив double[] с дробными значениями, в цикле просуммировать все значения, и ВЕРНУТЬ из метода результат
     * (в методе main при этом вывести в консоль результат этого метода)
     */

    public static double task3() {
        System.out.println("Task 3");
        double result = 0;
        double[] arr3 = {1.6, 2.5, 7.6, 14.8};
        for (int i = 0; i < arr3.length; i++) {
            result += arr3[i];
        }
        System.out.println(result);
        return result;
    }

    /**
     * task4) объявить массив String[] и ПЕРЕДАТЬ массив как параметр в другой (еще один) метод - static String concat(String[] stringArray).
     * Этот метод должен возвращать значение String - конкатенированные (объединенные) строки из исходного массива.
     * Полученный результат вывести в консоль в исходном методе task4
     * (вспоминаем как вызывать методы из других методов и как использовать их результат - возвращаемое ими значение)
     * <p>
     * P.S. Идея будет вам предлагать кое-какую альтернативу конкатенации строк в цикле
     * - можете согласитьсяс ней и дополнительно посмотреть что же такое StringBuilder
     */


    static String task4(String[] stringArray) {
        System.out.println("Task 4");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < stringArray.length; i++) {
            sb.append(stringArray[i]);
        }
        return sb.toString();
    }
}
/**
 * 2) Сдача домашки проходит через пулл-реквест, как и в прошлый раз. Это значит, что после проверки и принятия прошлой домашки вам надо (если продолжаете в старом проекте):
 * - смержить одобренный (аппрувнутый) ПР в мастер, удалить ставшую ненужной ветку (кнопка появится там же, где кнопка мержа)
 * - перейти в Идею, перейти на ветку мастер (сделать чекаут), сделать апдейт мастера (синяя стрелка в правом верхнем углу)
 * - создать от мастера новую ветку (new branch), и делать домашку в ней
 * - написанный код закоммитить и запушить на гитхаб
 * - зайти на гитхаб, создать новый ПР и отправить ссылку на него на проверку наставнику
 * <p>
 * ЗАДАНИЕ:
 * 0) провести небольшой рефакторинг кода прошлой домашки - переместить код в метод doFirstHomework(), чтобы в методе main остался только вызов этого метода (либо же создать новый проект - по желанию)
 * <p>
 * далее таски (task1...n) делать в новых методах с названиями "task1...n" и также вызывать их из метода main
 * <p>
 * <p>
 * task3) объявить массив double[] с дробными значениями, в цикле просуммировать все значения, и ВЕРНУТЬ из метода результат
 * (в методе main при этом вывести в консоль результат этого метода)
 * <p>
 * task4) объявить массив String[] и ПЕРЕДАТЬ массив как параметр в другой (еще один) метод - static String concat(String[] stringArray).
 * Этот метод должен возвращать значение String - конкатенированные (объединенные) строки из исходного массива.
 * Полученный результат вывести в консоль в исходном методе task4
 * (вспоминаем как вызывать методы из других методов и как использовать их результат - возвращаемое ими значение)
 * <p>
 * P.S. Идея будет вам предлагать кое-какую альтернативу конкатенации строк в цикле - можете согласитьсяс ней и дополнительно посмотреть что же такое StringBuilderМассивы, методы
 * ТЕКСТ ЗАДАНИЯ
 * 1) Для выполнения каждого задания (task) используйте отдельные методы в классе Main, которые будут вызываться из метода main (не забываем про разницу между классом Main и методом main) таким образом (скопируйте код в свой класс и изменяйте под свои задачи):
 * <p>
 * public class Main {
 * public static void main(String[] args) {
 * task1();
 * task2();
 * }
 * <p>
 * public static void task1 () {
 * System.out.println("Задача 1");
 * ... // Пишем код для задачи 1
 * }
 * <p>
 * public static int task2 () {
 * System.out.println("Задача 2");
 * ... // Пишем код для задачи 2
 * }
 * }
 * <p>
 * ВНИМАНИЕ!! После вставки этого кода для его правильного форматирования нажмите сочетание клавиш Ctrl+Alt+L
 * <p>
 * 2) Сдача домашки проходит через пулл-реквест, как и в прошлый раз. Это значит, что после проверки и принятия прошлой домашки вам надо (если продолжаете в старом проекте):
 * - смержить одобренный (аппрувнутый) ПР в мастер, удалить ставшую ненужной ветку (кнопка появится там же, где кнопка мержа)
 * - перейти в Идею, перейти на ветку мастер (сделать чекаут), сделать апдейт мастера (синяя стрелка в правом верхнем углу)
 * - создать от мастера новую ветку (new branch), и делать домашку в ней
 * - написанный код закоммитить и запушить на гитхаб
 * - зайти на гитхаб, создать новый ПР и отправить ссылку на него на проверку наставнику
 * <p>
 * ЗАДАНИЕ:
 * 0) провести небольшой рефакторинг кода прошлой домашки - переместить код в метод doFirstHomework(), чтобы в методе main остался только вызов этого метода (либо же создать новый проект - по желанию)
 * <p>
 * далее таски (task1...n) делать в новых методах с названиями "task1...n" и также вызывать их из метода main
 * <p>
 * task1) объявить пустой массив типа int[] с заданным размером, в цикле заполнить его случайными значениями (с помощью Random), далее вывести весь массив в консоль с помощью Arrays.toString()
 * <p>
 * task2) объявить массив со значениями от 1 до 10, вывести нечетные значения (остаток от деления на 2 НЕ равен нулю) в консоль
 * <p>
 * task3) объявить массив double[] с дробными значениями, в цикле просуммировать все значения, и ВЕРНУТЬ из метода результат
 * (в методе main при этом вывести в консоль результат этого метода)
 * <p>
 */